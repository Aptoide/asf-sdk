apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
  compileSdkVersion COMPILE_SDK_VERSION

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION

    versionCode VERSION_CODE
    versionName VERSION_NAME
  }

  buildTypes {
    debug {
      minifyEnabled false
      buildConfigField "String", "IAB_BIND_ACTION",
          "\"" + project.APPCOINS_DEV_IAB_BIND_ACTION + "\""
      buildConfigField "String", "IAB_BIND_PACKAGE",
          "\"" + project.APPCOINS_DEV_IAB_BIND_PACKAGE + "\""
      buildConfigField 'String', 'BDS_WALLET_PACKAGE_NAME',
          project.BDS_WALLET_PACKAGE_NAME_DEV
      buildConfigField 'String', 'APTOIDE_PACKAGE_NAME',
          project.APTOIDE_PACKAGE_NAME_DEV
      buildConfigField 'String', 'HOST_WS',
          "\"" + project.ROPSTEN_NETWORK_BACKEND_BASE_HOST_WS + "\""
      buildConfigField 'String', 'SERVICE_BIND_LIST',
          "\"" + project.APTOIDE_PACKAGE_NAME_DEV.replace('\"', '') +
              "," +
              project.BDS_WALLET_PACKAGE_NAME_DEV.replace('\"', '') +
              "," +
              project.CAFE_BAZAR_PACKAGE_NAME.replace('\"', '') +
              "\""
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "String", "IAB_BIND_ACTION",
          "\"" + project.APPCOINS_IAB_BIND_ACTION + "\""
      buildConfigField "String", "IAB_BIND_PACKAGE",
          "\"" + project.APPCOINS_IAB_BIND_PACKAGE + "\""
      buildConfigField 'String', 'BDS_WALLET_PACKAGE_NAME',
          project.BDS_WALLET_PACKAGE_NAME
      buildConfigField 'String', 'APTOIDE_PACKAGE_NAME',
          project.APTOIDE_PACKAGE_NAME
      buildConfigField 'String', 'HOST_WS',
          "\"" + project.MAIN_NETWORK_BACKEND_BASE_HOST_WS + "\""
      buildConfigField 'String', 'SERVICE_BIND_LIST',
          "\"" + project.APTOIDE_PACKAGE_NAME.replace('\"', '') +
              "," +
              project.BDS_WALLET_PACKAGE_NAME.replace('\"', '') +
              "," +
              project.CAFE_BAZAR_PACKAGE_NAME.replace('\"', '') +
              "\""
      minifyEnabled false
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  api project(path: ':appcoins-billing')
}

//region Publishing
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "sources"
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

  failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    MyPublication(MavenPublication) {
      groupId 'com.blockchainds'
      artifactId project.name
      version project.version
      artifact(sourcesJar)
      artifact(javadocJar)
      artifact("$buildDir/outputs/aar/${project.name}-${System.getenv('BUILD_TYPE_NAME')}.aar")

      //The publication doesn't know about our dependencies, so we have to manually add them to the pom
      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        //Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.api.allDependencies.each {
          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', it.group)
          dependencyNode.appendNode('artifactId', it.name)
          dependencyNode.appendNode('version', it.version)
        }
      }
    }
  }
  repositories {
    maven {
      url "$buildDir/repo"
    }
  }
}

bintray {
  user = "${BDS_BINTRAY_USER}"
  key = "${BDS_BINTRAY_KEY}"
  publications = ['MyPublication']
  pkg {
    repo = 'bds'
    name = "${project.name}"
    userOrg = "${BDS_BINTRAY_ORG}"
    licenses = ['GPL-3.0']
    vcsUrl = 'https://github.com/Aptoide/bds-sdk/android-appcoins-billing'

    version {
      name = project.version
    }
  }
}
//endregion

